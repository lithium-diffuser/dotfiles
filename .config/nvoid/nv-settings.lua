-- nvoid.builtin.telescope.defaults.layout_config.horizontal.preview_width = function ()
-- nvoid.builtin.telescope.defaults.mappings.i["<C-q>"].clear = function ()
-- nvoid.builtin.telescope.defaults.mappings.n["<C-q>"].clear = function ()
-- nvoid.builtin.telescope.file_previewer = function ()
-- nvoid.builtin.telescope.file_sorter = function ()
-- nvoid.builtin.telescope.generic_sorter = function ()
-- nvoid.builtin.telescope.grep_previewer = function ()
-- nvoid.builtin.telescope.mappings.i["<C-q>"].clear = function ()
-- nvoid.builtin.telescope.mappings.i["<CR>"].clear = function ()
-- nvoid.builtin.telescope.mappings.n["<C-q>"].clear = function ()
-- nvoid.builtin.telescope.qflist_previewer = function ()
-- nvoid.format_on_save.filter = function ()
-- nvoid.lsp.buffer_mappings.normal_mode.K["1"] = function ()
-- nvoid.lsp.buffer_mappings.normal_mode.gD["1"] = function ()
-- nvoid.lsp.buffer_mappings.normal_mode.gI["1"] = function ()
-- nvoid.lsp.buffer_mappings.normal_mode.gd["1"] = function ()
-- nvoid.lsp.buffer_mappings.normal_mode.gl["1"] = function ()
-- nvoid.lsp.buffer_mappings.normal_mode.gp["1"] = function ()
-- nvoid.lsp.buffer_mappings.normal_mode.gr["1"] = function ()
-- nvoid.lsp.buffer_mappings.normal_mode.gs["1"] = function ()
-- nvoid.lsp.diagnostics.float.format = function ()
nvoid.builtin.autopairs.active = true
nvoid.builtin.autopairs.check_ts = true
nvoid.builtin.autopairs.disable_filetype["1"] = "TelescopePrompt"
nvoid.builtin.autopairs.disable_filetype["2"] = "spectre_panel"
nvoid.builtin.autopairs.disable_in_macro = false
nvoid.builtin.autopairs.disable_in_visualblock = false
nvoid.builtin.autopairs.enable_afterquote = true
nvoid.builtin.autopairs.enable_check_bracket_line = false
nvoid.builtin.autopairs.enable_moveright = true
nvoid.builtin.autopairs.fast_wrap.chars["1"] = "{"
nvoid.builtin.autopairs.fast_wrap.chars["2"] = "["
nvoid.builtin.autopairs.fast_wrap.chars["3"] = "("
nvoid.builtin.autopairs.fast_wrap.chars["4"] = "\""
nvoid.builtin.autopairs.fast_wrap.chars["5"] = "'"
nvoid.builtin.autopairs.fast_wrap.check_comma = true
nvoid.builtin.autopairs.fast_wrap.end_key = "$"
nvoid.builtin.autopairs.fast_wrap.highlight = "Search"
nvoid.builtin.autopairs.fast_wrap.highlight_grey = "Comment"
nvoid.builtin.autopairs.fast_wrap.keys = "qwertyuiopzxcvbnmasdfghjkl"
nvoid.builtin.autopairs.fast_wrap.map = "<M-e>"
nvoid.builtin.autopairs.fast_wrap.offset = 0
nvoid.builtin.autopairs.fast_wrap.pattern = "[%'%\"%)%>%]%)%}%,]"
nvoid.builtin.autopairs.ignored_next_char = "[%w%%%'%[%\"%.]"
nvoid.builtin.autopairs.map_bs = true
nvoid.builtin.autopairs.map_c_w = false
nvoid.builtin.autopairs.map_char.all = "("
nvoid.builtin.autopairs.map_char.tex = "{"
nvoid.builtin.autopairs.ts_config.java = false
nvoid.builtin.autopairs.ts_config.javascript["1"] = "string"
nvoid.builtin.autopairs.ts_config.javascript["2"] = "template_string"
nvoid.builtin.autopairs.ts_config.lua["1"] = "string"
nvoid.builtin.autopairs.ts_config.lua["2"] = "source"
nvoid.builtin.gitsigns.active = true
nvoid.builtin.gitsigns.opts.attach_to_untracked = true
nvoid.builtin.gitsigns.opts.current_line_blame = false
nvoid.builtin.gitsigns.opts.current_line_blame_formatter_opts.relative_time = false
nvoid.builtin.gitsigns.opts.current_line_blame_opts.delay = 1000
nvoid.builtin.gitsigns.opts.current_line_blame_opts.ignore_whitespace = false
nvoid.builtin.gitsigns.opts.current_line_blame_opts.virt_text = true
nvoid.builtin.gitsigns.opts.current_line_blame_opts.virt_text_pos = "eol"
nvoid.builtin.gitsigns.opts.keymaps.buffer = true
nvoid.builtin.gitsigns.opts.keymaps.noremap = true
nvoid.builtin.gitsigns.opts.linehl = false
nvoid.builtin.gitsigns.opts.max_file_length = 40000
nvoid.builtin.gitsigns.opts.numhl = false
nvoid.builtin.gitsigns.opts.preview_config.border = "rounded"
nvoid.builtin.gitsigns.opts.preview_config.col = 1
nvoid.builtin.gitsigns.opts.preview_config.relative = "cursor"
nvoid.builtin.gitsigns.opts.preview_config.row = 0
nvoid.builtin.gitsigns.opts.preview_config.style = "minimal"
nvoid.builtin.gitsigns.opts.sign_priority = 6
nvoid.builtin.gitsigns.opts.signcolumn = true
nvoid.builtin.gitsigns.opts.signs.add.hl = "GitSignsAdd"
nvoid.builtin.gitsigns.opts.signs.add.linehl = "GitSignsAddLn"
nvoid.builtin.gitsigns.opts.signs.add.numhl = "GitSignsAddNr"
nvoid.builtin.gitsigns.opts.signs.add.text = "▎"
nvoid.builtin.gitsigns.opts.signs.change.hl = "GitSignsChange"
nvoid.builtin.gitsigns.opts.signs.change.linehl = "GitSignsChangeLn"
nvoid.builtin.gitsigns.opts.signs.change.numhl = "GitSignsChangeNr"
nvoid.builtin.gitsigns.opts.signs.change.text = "▎"
nvoid.builtin.gitsigns.opts.signs.changedelete.hl = "GitSignsChange"
nvoid.builtin.gitsigns.opts.signs.changedelete.linehl = "GitSignsChangeLn"
nvoid.builtin.gitsigns.opts.signs.changedelete.numhl = "GitSignsChangeNr"
nvoid.builtin.gitsigns.opts.signs.changedelete.text = "▎"
nvoid.builtin.gitsigns.opts.signs.delete.hl = "GitSignsDelete"
nvoid.builtin.gitsigns.opts.signs.delete.linehl = "GitSignsDeleteLn"
nvoid.builtin.gitsigns.opts.signs.delete.numhl = "GitSignsDeleteNr"
nvoid.builtin.gitsigns.opts.signs.delete.text = "契"
nvoid.builtin.gitsigns.opts.signs.topdelete.hl = "GitSignsDelete"
nvoid.builtin.gitsigns.opts.signs.topdelete.linehl = "GitSignsDeleteLn"
nvoid.builtin.gitsigns.opts.signs.topdelete.numhl = "GitSignsDeleteNr"
nvoid.builtin.gitsigns.opts.signs.topdelete.text = "契"
nvoid.builtin.gitsigns.opts.update_debounce = 200
nvoid.builtin.gitsigns.opts.watch_gitdir.follow_files = true
nvoid.builtin.gitsigns.opts.watch_gitdir.interval = 1000
nvoid.builtin.gitsigns.opts.word_diff = false
nvoid.builtin.gitsigns.opts.yadm.enable = false
nvoid.builtin.mason.github.download_url_template = "https://github.com/%s/releases/download/%s/%s"
nvoid.builtin.mason.log_level = 2
nvoid.builtin.mason.max_concurrent_installers = 4
nvoid.builtin.mason.ui.keymaps.apply_language_filter = "<C-f>"
nvoid.builtin.mason.ui.keymaps.cancel_installation = "<C-c>"
nvoid.builtin.mason.ui.keymaps.check_outdated_packages = "C"
nvoid.builtin.mason.ui.keymaps.check_package_version = "c"
nvoid.builtin.mason.ui.keymaps.install_package = "i"
nvoid.builtin.mason.ui.keymaps.toggle_package_expand = "<CR>"
nvoid.builtin.mason.ui.keymaps.uninstall_package = "X"
nvoid.builtin.mason.ui.keymaps.update_all_packages = "U"
nvoid.builtin.mason.ui.keymaps.update_package = "u"
nvoid.builtin.notify.active = true
nvoid.builtin.notify.opts.background_colour = "Normal"
nvoid.builtin.notify.opts.icons.DEBUG = ""
nvoid.builtin.notify.opts.icons.ERROR = " "
nvoid.builtin.notify.opts.icons.INFO = ""
nvoid.builtin.notify.opts.icons.TRACE = "✎"
nvoid.builtin.notify.opts.icons.WARN = " "
nvoid.builtin.notify.opts.minimum_width = 50
nvoid.builtin.notify.opts.render = "default"
nvoid.builtin.notify.opts.stages = "slide"
nvoid.builtin.notify.opts.timeout = 5000
nvoid.builtin.nvimtree.active = true
nvoid.builtin.nvimtree.setup.actions.change_dir.enable = true
nvoid.builtin.nvimtree.setup.actions.change_dir.global = false
nvoid.builtin.nvimtree.setup.actions.change_dir.restrict_above_cwd = false
nvoid.builtin.nvimtree.setup.actions.open_file.quit_on_open = false
nvoid.builtin.nvimtree.setup.actions.open_file.resize_window = false
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.enable = true
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.buftype["1"] = "nofile"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.buftype["2"] = "terminal"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.buftype["3"] = "help"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["1"] = "notify"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["2"] = "packer"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["3"] = "qf"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["4"] = "diff"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["5"] = "fugitive"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["6"] = "fugitiveblame"
nvoid.builtin.nvimtree.setup.actions.use_system_clipboard = true
nvoid.builtin.nvimtree.setup.auto_reload_on_write = true
nvoid.builtin.nvimtree.setup.diagnostics.enable = true
nvoid.builtin.nvimtree.setup.diagnostics.icons.error = " "
nvoid.builtin.nvimtree.setup.diagnostics.icons.hint = " "
nvoid.builtin.nvimtree.setup.diagnostics.icons.info = ""
nvoid.builtin.nvimtree.setup.diagnostics.icons.warning = " "
nvoid.builtin.nvimtree.setup.diagnostics.show_on_dirs = false
nvoid.builtin.nvimtree.setup.disable_netrw = true
nvoid.builtin.nvimtree.setup.filters.custom["1"] = "node_modules"
nvoid.builtin.nvimtree.setup.filters.custom["2"] = "\\.cache"
nvoid.builtin.nvimtree.setup.filters.custom["3"] = "^.git$"
nvoid.builtin.nvimtree.setup.filters.dotfiles = false
nvoid.builtin.nvimtree.setup.git.enable = true
nvoid.builtin.nvimtree.setup.git.ignore = false
nvoid.builtin.nvimtree.setup.git.timeout = 200
nvoid.builtin.nvimtree.setup.hijack_cursor = false
nvoid.builtin.nvimtree.setup.hijack_directories.auto_open = true
nvoid.builtin.nvimtree.setup.hijack_directories.enable = true
nvoid.builtin.nvimtree.setup.hijack_netrw = true
nvoid.builtin.nvimtree.setup.hijack_unnamed_buffer_when_opening = false
nvoid.builtin.nvimtree.setup.log.enable = false
nvoid.builtin.nvimtree.setup.log.truncate = false
nvoid.builtin.nvimtree.setup.log.types.all = false
nvoid.builtin.nvimtree.setup.log.types.config = false
nvoid.builtin.nvimtree.setup.log.types.copy_paste = false
nvoid.builtin.nvimtree.setup.log.types.diagnostics = false
nvoid.builtin.nvimtree.setup.log.types.git = false
nvoid.builtin.nvimtree.setup.log.types.profile = false
nvoid.builtin.nvimtree.setup.open_on_tab = false
nvoid.builtin.nvimtree.setup.renderer.highlight_git = true
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.default = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.arrow_closed = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.arrow_open = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.default = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.empty = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.empty_open = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.open = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.symlink = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.symlink_open = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.deleted = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.ignored = "◌"
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.renamed = "➜"
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.staged = "S"
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.unmerged = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.unstaged = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.untracked = "U"
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.symlink = ""
nvoid.builtin.nvimtree.setup.renderer.indent_markers.enable = false
nvoid.builtin.nvimtree.setup.renderer.indent_markers.icons.corner = "└"
nvoid.builtin.nvimtree.setup.renderer.indent_markers.icons.edge = "│"
nvoid.builtin.nvimtree.setup.renderer.indent_markers.icons.item = "│"
nvoid.builtin.nvimtree.setup.renderer.indent_markers.icons.none = " "
nvoid.builtin.nvimtree.setup.renderer.root_folder_modifier = ":t"
nvoid.builtin.nvimtree.setup.sort_by = "name"
nvoid.builtin.nvimtree.setup.trash.cmd = "trash"
nvoid.builtin.nvimtree.setup.trash.require_confirm = true
nvoid.builtin.nvimtree.setup.update_cwd = false
nvoid.builtin.nvimtree.setup.update_focused_file.enable = true
nvoid.builtin.nvimtree.setup.update_focused_file.update_cwd = true
nvoid.builtin.nvimtree.setup.view.hide_root_folder = false
nvoid.builtin.nvimtree.setup.view.mappings.custom_only = false
nvoid.builtin.nvimtree.setup.view.number = false
nvoid.builtin.nvimtree.setup.view.preserve_window_proportions = false
nvoid.builtin.nvimtree.setup.view.relativenumber = false
nvoid.builtin.nvimtree.setup.view.side = "left"
nvoid.builtin.nvimtree.setup.view.signcolumn = "yes"
nvoid.builtin.telescope.active = true
nvoid.builtin.telescope.defaults.borderchars["1"] = "─"
nvoid.builtin.telescope.defaults.borderchars["2"] = "│"
nvoid.builtin.telescope.defaults.borderchars["3"] = "─"
nvoid.builtin.telescope.defaults.borderchars["4"] = "│"
nvoid.builtin.telescope.defaults.borderchars["5"] = "╭"
nvoid.builtin.telescope.defaults.borderchars["6"] = "╮"
nvoid.builtin.telescope.defaults.borderchars["7"] = "╯"
nvoid.builtin.telescope.defaults.borderchars["8"] = "╰"
nvoid.builtin.telescope.defaults.color_devicons = true
nvoid.builtin.telescope.defaults.entry_prefix = "  "
nvoid.builtin.telescope.defaults.initial_mode = "insert"
nvoid.builtin.telescope.defaults.layout_config.horizontal.mirror = false
nvoid.builtin.telescope.defaults.layout_config.preview_cutoff = 120
nvoid.builtin.telescope.defaults.layout_config.vertical.mirror = false
nvoid.builtin.telescope.defaults.layout_config.width = 0.75
nvoid.builtin.telescope.defaults.layout_strategy = "horizontal"
nvoid.builtin.telescope.defaults.mappings.i["<C-c>"]["1"] = "close"
nvoid.builtin.telescope.defaults.mappings.i["<C-j>"]["1"] = "cycle_history_next"
nvoid.builtin.telescope.defaults.mappings.i["<C-k>"]["1"] = "cycle_history_prev"
nvoid.builtin.telescope.defaults.mappings.i["<C-n>"]["1"] = "move_selection_next"
nvoid.builtin.telescope.defaults.mappings.i["<C-p>"]["1"] = "move_selection_previous"
nvoid.builtin.telescope.defaults.mappings.i["<C-q>"]["1"] = "smart_send_to_qflist"
nvoid.builtin.telescope.defaults.mappings.i["<C-q>"]["2"] = "open_qflist"
nvoid.builtin.telescope.defaults.mappings.i["<CR>"]["1"] = "select_default"
nvoid.builtin.telescope.defaults.mappings.n["<C-n>"]["1"] = "move_selection_next"
nvoid.builtin.telescope.defaults.mappings.n["<C-p>"]["1"] = "move_selection_previous"
nvoid.builtin.telescope.defaults.mappings.n["<C-q>"]["1"] = "smart_send_to_qflist"
nvoid.builtin.telescope.defaults.mappings.n["<C-q>"]["2"] = "open_qflist"
nvoid.builtin.telescope.defaults.path_display.shorten = 5
nvoid.builtin.telescope.defaults.prompt_prefix = " "
nvoid.builtin.telescope.defaults.selection_caret = " "
nvoid.builtin.telescope.defaults.selection_strategy = "reset"
nvoid.builtin.telescope.defaults.set_env.COLORTERM = "truecolor"
nvoid.builtin.telescope.defaults.sorting_strategy = "descending"
nvoid.builtin.telescope.defaults.vimgrep_arguments["1"] = "rg"
nvoid.builtin.telescope.defaults.vimgrep_arguments["2"] = "--color=never"
nvoid.builtin.telescope.defaults.vimgrep_arguments["3"] = "--no-heading"
nvoid.builtin.telescope.defaults.vimgrep_arguments["4"] = "--with-filename"
nvoid.builtin.telescope.defaults.vimgrep_arguments["5"] = "--line-number"
nvoid.builtin.telescope.defaults.vimgrep_arguments["6"] = "--column"
nvoid.builtin.telescope.defaults.vimgrep_arguments["7"] = "--smart-case"
nvoid.builtin.telescope.defaults.vimgrep_arguments["8"] = "--hidden"
nvoid.builtin.telescope.defaults.vimgrep_arguments["9"] = "--glob=!.git/"
nvoid.builtin.telescope.defaults.winblend = 0
nvoid.builtin.telescope.extensions.fzf.case_mode = "smart_case"
nvoid.builtin.telescope.extensions.fzf.fuzzy = true
nvoid.builtin.telescope.extensions.fzf.override_file_sorter = true
nvoid.builtin.telescope.extensions.fzf.override_generic_sorter = true
nvoid.builtin.telescope.mappings.i["<C-c>"]["1"] = "close"
nvoid.builtin.telescope.mappings.i["<C-j>"]["1"] = "cycle_history_next"
nvoid.builtin.telescope.mappings.i["<C-k>"]["1"] = "cycle_history_prev"
nvoid.builtin.telescope.mappings.i["<C-n>"]["1"] = "move_selection_next"
nvoid.builtin.telescope.mappings.i["<C-p>"]["1"] = "move_selection_previous"
nvoid.builtin.telescope.mappings.i["<C-q>"]["1"] = "smart_send_to_qflist"
nvoid.builtin.telescope.mappings.i["<C-q>"]["2"] = "open_qflist"
nvoid.builtin.telescope.mappings.i["<CR>"]["1"] = "select_default"
nvoid.builtin.telescope.mappings.i["<CR>"]["2"] = "center"
nvoid.builtin.telescope.mappings.n["<C-n>"]["1"] = "move_selection_next"
nvoid.builtin.telescope.mappings.n["<C-p>"]["1"] = "move_selection_previous"
nvoid.builtin.telescope.mappings.n["<C-q>"]["1"] = "smart_send_to_qflist"
nvoid.builtin.telescope.mappings.n["<C-q>"]["2"] = "open_qflist"
nvoid.builtin.telescope.pickers.find_files.hidden = true
nvoid.builtin.telescope.pickers.live_grep.only_sort_text = true
nvoid.builtin.treesitter.auto_install = true
nvoid.builtin.treesitter.ensure_installed["1"] = "bash"
nvoid.builtin.treesitter.ensure_installed["10"] = "rust"
nvoid.builtin.treesitter.ensure_installed["11"] = "java"
nvoid.builtin.treesitter.ensure_installed["12"] = "yaml"
nvoid.builtin.treesitter.ensure_installed["2"] = "c"
nvoid.builtin.treesitter.ensure_installed["3"] = "javascript"
nvoid.builtin.treesitter.ensure_installed["4"] = "json"
nvoid.builtin.treesitter.ensure_installed["5"] = "lua"
nvoid.builtin.treesitter.ensure_installed["6"] = "python"
nvoid.builtin.treesitter.ensure_installed["7"] = "typescript"
nvoid.builtin.treesitter.ensure_installed["8"] = "tsx"
nvoid.builtin.treesitter.ensure_installed["9"] = "css"
nvoid.builtin.treesitter.highlight.enable = true
nvoid.builtin.treesitter.highlight.enabled = true
nvoid.builtin.treesitter.highlight.use_languagetree = true
nvoid.builtin.treesitter.ignore_install["1"] = "haskell"
nvoid.builtin.treesitter.indent.enable = true
nvoid.builtin.treesitter.matchup.enable = true
nvoid.builtin.which_key.active = true
nvoid.builtin.which_key.mappings.N["1"] = "<cmd>enew<cr>"
nvoid.builtin.which_key.mappings.N["2"] = " New File"
nvoid.builtin.which_key.mappings.b["1"] = "<cmd>Telescope buffers<cr>"
nvoid.builtin.which_key.mappings.b["2"] = "﬘ Buffers"
nvoid.builtin.which_key.mappings.e["1"] = "<cmd>NvimTreeToggle<cr>"
nvoid.builtin.which_key.mappings.e["2"] = " Explorer"
nvoid.builtin.which_key.mappings.f.H["1"] = "<cmd>Telescope help_tags<cr>"
nvoid.builtin.which_key.mappings.f.H["2"] = "CMD Help"
nvoid.builtin.which_key.mappings.f.b["1"] = "<cmd>lua require 'telescope'.extensions.file_browser.file_browser()<cr>"
nvoid.builtin.which_key.mappings.f.b["2"] = "File Browser"
nvoid.builtin.which_key.mappings.f.f["1"] = "<cmd>Telescope find_files<cr>"
nvoid.builtin.which_key.mappings.f.f["2"] = "Find files"
nvoid.builtin.which_key.mappings.f.h["1"] = "<cmd>Telescope oldfiles<cr>"
nvoid.builtin.which_key.mappings.f.h["2"] = "Old Files"
nvoid.builtin.which_key.mappings.f.k["1"] = "<cmd>Telescope keymaps<cr>"
nvoid.builtin.which_key.mappings.f.k["2"] = "Key maps"
nvoid.builtin.which_key.mappings.f.m["1"] = "<cmd>Telescope media_files<cr>"
nvoid.builtin.which_key.mappings.f.m["2"] = "Media Files"
nvoid.builtin.which_key.mappings.f.name = " Find"
nvoid.builtin.which_key.mappings.f.o["1"] = "<cmd>Telescope vim_options<cr>"
nvoid.builtin.which_key.mappings.f.o["2"] = "Options"
nvoid.builtin.which_key.mappings.f.t["1"] = "<cmd>Telescope filetypes<cr>"
nvoid.builtin.which_key.mappings.f.t["2"] = "File Types"
nvoid.builtin.which_key.mappings.f.w["1"] = "<cmd>Telescope current_buffer_fuzzy_find<cr>"
nvoid.builtin.which_key.mappings.f.w["2"] = "Find Word In Document"
nvoid.builtin.which_key.mappings.g.R["1"] = "<cmd>lua require 'gitsigns'.reset_buffer()<cr>"
nvoid.builtin.which_key.mappings.g.R["2"] = "Reset Buffer"
nvoid.builtin.which_key.mappings.g.g["1"] = "<cmd>Gitsigns toggle_signs<cr>"
nvoid.builtin.which_key.mappings.g.g["2"] = "Toggle GitSigns"
nvoid.builtin.which_key.mappings.g.j["1"] = "<cmd>lua require 'gitsigns'.next_hunk()<cr>"
nvoid.builtin.which_key.mappings.g.j["2"] = "Next Hunk"
nvoid.builtin.which_key.mappings.g.k["1"] = "<cmd>lua require 'gitsigns'.prev_hunk()<cr>"
nvoid.builtin.which_key.mappings.g.k["2"] = "Prev Hunk"
nvoid.builtin.which_key.mappings.g.l["1"] = "<cmd>lua require 'gitsigns'.blame_line()<cr>"
nvoid.builtin.which_key.mappings.g.l["2"] = "Blame"
nvoid.builtin.which_key.mappings.g.name = " Git"
nvoid.builtin.which_key.mappings.g.p["1"] = "<cmd>lua require 'gitsigns'.preview_hunk()<cr>"
nvoid.builtin.which_key.mappings.g.p["2"] = "Preview Hunk"
nvoid.builtin.which_key.mappings.g.r["1"] = "<cmd>lua require 'gitsigns'.reset_hunk()<cr>"
nvoid.builtin.which_key.mappings.g.r["2"] = "Reset Hunk"
nvoid.builtin.which_key.mappings.g.s["1"] = "<cmd>lua require 'gitsigns'.stage_hunk()<cr>"
nvoid.builtin.which_key.mappings.g.s["2"] = "Stage Hunk"
nvoid.builtin.which_key.mappings.l.d["1"] = "<cmd>NvoidDiagnostics<cr>"
nvoid.builtin.which_key.mappings.l.d["2"] = "Diagnostics"
nvoid.builtin.which_key.mappings.l.f["1"] = "<cmd>NvoidFormat<cr>"
nvoid.builtin.which_key.mappings.l.f["2"] = "Format"
nvoid.builtin.which_key.mappings.l.i["1"] = "<cmd>LspInfo<cr>"
nvoid.builtin.which_key.mappings.l.i["2"] = "Info"
nvoid.builtin.which_key.mappings.l.l["1"] = "<cmd>MasonLog<cr>"
nvoid.builtin.which_key.mappings.l.l["2"] = "Mason Log"
nvoid.builtin.which_key.mappings.l.m["1"] = "<cmd>Mason<cr>"
nvoid.builtin.which_key.mappings.l.m["2"] = "Mason"
nvoid.builtin.which_key.mappings.l.name = "力lsp"
nvoid.builtin.which_key.mappings.l.r["1"] = "<cmd>NvoidRename<cr>"
nvoid.builtin.which_key.mappings.l.r["2"] = "Rename"
nvoid.builtin.which_key.mappings.n.e["1"] = "<cmd>:e ~/.config/nvoid/config.lua<CR>"
nvoid.builtin.which_key.mappings.n.e["2"] = " Edit Config"
nvoid.builtin.which_key.mappings.n.i["1"] = "<cmd>NvoidInfo<cr>"
nvoid.builtin.which_key.mappings.n.i["2"] = " Info"
nvoid.builtin.which_key.mappings.n.name = " Nvoid"
nvoid.builtin.which_key.mappings.n.r["1"] = "<cmd>NvoidReload<CR>"
nvoid.builtin.which_key.mappings.n.r["2"] = "勒Reload"
nvoid.builtin.which_key.mappings.n.u["1"] = "<cmd>NvoidUpdate<CR>"
nvoid.builtin.which_key.mappings.n.u["2"] = "ﮮ Update"
nvoid.builtin.which_key.mappings.p.S["1"] = "<cmd>PackerStatus<cr>"
nvoid.builtin.which_key.mappings.p.S["2"] = "Status"
nvoid.builtin.which_key.mappings.p.c["1"] = "<cmd>PackerCompile<cr>"
nvoid.builtin.which_key.mappings.p.c["2"] = "Compile"
nvoid.builtin.which_key.mappings.p.i["1"] = "<cmd>PackerInstall<cr>"
nvoid.builtin.which_key.mappings.p.i["2"] = "Install"
nvoid.builtin.which_key.mappings.p.name = " Packer"
nvoid.builtin.which_key.mappings.p.s["1"] = "<cmd>PackerSync<cr>"
nvoid.builtin.which_key.mappings.p.s["2"] = "Sync"
nvoid.builtin.which_key.mappings.p.u["1"] = "<cmd>PackerUpdate<cr>"
nvoid.builtin.which_key.mappings.p.u["2"] = "Update"
nvoid.builtin.which_key.mappings.w["1"] = "<cmd>write<cr>"
nvoid.builtin.which_key.mappings.w["2"] = " Write"
nvoid.builtin.which_key.mappings.x["1"] = "<cmd>wqa!<cr>"
nvoid.builtin.which_key.mappings.x["2"] = " Write and Quit"
nvoid.builtin.which_key.mappings["/"]["1"] = "<Plug>(comment_toggle_linewise_current)"
nvoid.builtin.which_key.mappings["/"]["2"] = "蘒Comment"
nvoid.builtin.which_key.mappings[";"]["1"] = "<cmd>Alpha<cr>"
nvoid.builtin.which_key.mappings[";"]["2"] = " Alpha"
nvoid.builtin.which_key.opts.mode = "n"
nvoid.builtin.which_key.opts.noremap = true
nvoid.builtin.which_key.opts.nowait = true
nvoid.builtin.which_key.opts.prefix = "<leader>"
nvoid.builtin.which_key.opts.silent = true
nvoid.builtin.which_key.setup.hidden["1"] = "<silent>"
nvoid.builtin.which_key.setup.hidden["2"] = "<cmd>"
nvoid.builtin.which_key.setup.hidden["3"] = "<Cmd>"
nvoid.builtin.which_key.setup.hidden["4"] = "<CR>"
nvoid.builtin.which_key.setup.hidden["5"] = "call"
nvoid.builtin.which_key.setup.hidden["6"] = "lua"
nvoid.builtin.which_key.setup.hidden["7"] = "^:"
nvoid.builtin.which_key.setup.hidden["8"] = "^ "
nvoid.builtin.which_key.setup.icons.breadcrumb = "»"
nvoid.builtin.which_key.setup.icons.group = "+ "
nvoid.builtin.which_key.setup.icons.separator = "➜"
nvoid.builtin.which_key.setup.ignore_missing = false
nvoid.builtin.which_key.setup.layout.align = "left"
nvoid.builtin.which_key.setup.layout.height.max = 25
nvoid.builtin.which_key.setup.layout.height.min = 4
nvoid.builtin.which_key.setup.layout.spacing = 3
nvoid.builtin.which_key.setup.layout.width.max = 50
nvoid.builtin.which_key.setup.layout.width.min = 20
nvoid.builtin.which_key.setup.plugins.marks = true
nvoid.builtin.which_key.setup.plugins.presets.g = true
nvoid.builtin.which_key.setup.plugins.presets.motions = false
nvoid.builtin.which_key.setup.plugins.presets.nav = true
nvoid.builtin.which_key.setup.plugins.presets.operators = false
nvoid.builtin.which_key.setup.plugins.presets.text_objects = false
nvoid.builtin.which_key.setup.plugins.presets.windows = false
nvoid.builtin.which_key.setup.plugins.presets.z = true
nvoid.builtin.which_key.setup.plugins.registers = true
nvoid.builtin.which_key.setup.plugins.spelling.enabled = true
nvoid.builtin.which_key.setup.plugins.spelling.suggestions = 20
nvoid.builtin.which_key.setup.popup_mappings.scroll_down = "<c-d>"
nvoid.builtin.which_key.setup.popup_mappings.scroll_up = "<c-u>"
nvoid.builtin.which_key.setup.show_help = true
nvoid.builtin.which_key.setup.triggers = "auto"
nvoid.builtin.which_key.setup.triggers_blacklist.i["1"] = "j"
nvoid.builtin.which_key.setup.triggers_blacklist.i["2"] = "k"
nvoid.builtin.which_key.setup.triggers_blacklist.v["1"] = "j"
nvoid.builtin.which_key.setup.triggers_blacklist.v["2"] = "k"
nvoid.builtin.which_key.setup.window.border = "single"
nvoid.builtin.which_key.setup.window.margin["1"] = 1
nvoid.builtin.which_key.setup.window.margin["2"] = 0
nvoid.builtin.which_key.setup.window.margin["3"] = 1
nvoid.builtin.which_key.setup.window.margin["4"] = 0
nvoid.builtin.which_key.setup.window.padding["1"] = 2
nvoid.builtin.which_key.setup.window.padding["2"] = 2
nvoid.builtin.which_key.setup.window.padding["3"] = 2
nvoid.builtin.which_key.setup.window.padding["4"] = 2
nvoid.builtin.which_key.setup.window.position = "bottom"
nvoid.builtin.which_key.setup.window.winblend = 0
nvoid.builtin.which_key.vmappings["/"]["1"] = "<Plug>(comment_toggle_linewise_visual)"
nvoid.builtin.which_key.vmappings["/"]["2"] = "蘒Comment toggle linewise (visual)"
nvoid.builtin.which_key.vopts.mode = "v"
nvoid.builtin.which_key.vopts.noremap = true
nvoid.builtin.which_key.vopts.nowait = true
nvoid.builtin.which_key.vopts.prefix = "<leader>"
nvoid.builtin.which_key.vopts.silent = true
nvoid.colorscheme = "nord"
nvoid.format_on_save.pattern = "*"
nvoid.format_on_save.timeout = 1000
nvoid.keys.normal_mode["<C-s>"] = ":w<cr>"
nvoid.leader = "space"
nvoid.log.level = "warn"
nvoid.log.override_notify = false
nvoid.log.viewer.cmd = "lnav"
nvoid.log.viewer.layout_config.direction = "horizontal"
nvoid.log.viewer.layout_config.open_mapping = ""
nvoid.log.viewer.layout_config.size = 40
nvoid.lsp.automatic_configuration.skipped_filetypes["1"] = "markdown"
nvoid.lsp.automatic_configuration.skipped_filetypes["2"] = "rst"
nvoid.lsp.automatic_configuration.skipped_filetypes["3"] = "plaintext"
nvoid.lsp.automatic_configuration.skipped_servers["1"] = "angularls"
nvoid.lsp.automatic_configuration.skipped_servers["10"] = "eslintls"
nvoid.lsp.automatic_configuration.skipped_servers["11"] = "golangci_lint_ls"
nvoid.lsp.automatic_configuration.skipped_servers["12"] = "graphql"
nvoid.lsp.automatic_configuration.skipped_servers["13"] = "jedi_language_server"
nvoid.lsp.automatic_configuration.skipped_servers["14"] = "ltex"
nvoid.lsp.automatic_configuration.skipped_servers["15"] = "ocamlls"
nvoid.lsp.automatic_configuration.skipped_servers["16"] = "phpactor"
nvoid.lsp.automatic_configuration.skipped_servers["17"] = "psalm"
nvoid.lsp.automatic_configuration.skipped_servers["18"] = "pylsp"
nvoid.lsp.automatic_configuration.skipped_servers["19"] = "quick_lint_js"
nvoid.lsp.automatic_configuration.skipped_servers["2"] = "ansiblels"
nvoid.lsp.automatic_configuration.skipped_servers["20"] = "rome"
nvoid.lsp.automatic_configuration.skipped_servers["21"] = "reason_ls"
nvoid.lsp.automatic_configuration.skipped_servers["22"] = "scry"
nvoid.lsp.automatic_configuration.skipped_servers["23"] = "solang"
nvoid.lsp.automatic_configuration.skipped_servers["24"] = "solidity_ls"
nvoid.lsp.automatic_configuration.skipped_servers["25"] = "sorbet"
nvoid.lsp.automatic_configuration.skipped_servers["26"] = "sourcekit"
nvoid.lsp.automatic_configuration.skipped_servers["27"] = "sourcery"
nvoid.lsp.automatic_configuration.skipped_servers["28"] = "spectral"
nvoid.lsp.automatic_configuration.skipped_servers["29"] = "sqlls"
nvoid.lsp.automatic_configuration.skipped_servers["3"] = "ccls"
nvoid.lsp.automatic_configuration.skipped_servers["30"] = "sqls"
nvoid.lsp.automatic_configuration.skipped_servers["31"] = "stylelint_lsp"
nvoid.lsp.automatic_configuration.skipped_servers["32"] = "tflint"
nvoid.lsp.automatic_configuration.skipped_servers["33"] = "svlangserver"
nvoid.lsp.automatic_configuration.skipped_servers["34"] = "verible"
nvoid.lsp.automatic_configuration.skipped_servers["35"] = "vuels"
nvoid.lsp.automatic_configuration.skipped_servers["4"] = "csharp_ls"
nvoid.lsp.automatic_configuration.skipped_servers["5"] = "cssmodules_ls"
nvoid.lsp.automatic_configuration.skipped_servers["6"] = "denols"
nvoid.lsp.automatic_configuration.skipped_servers["7"] = "ember"
nvoid.lsp.automatic_configuration.skipped_servers["8"] = "emmet_ls"
nvoid.lsp.automatic_configuration.skipped_servers["9"] = "eslint"
nvoid.lsp.buffer_mappings.normal_mode.K["2"] = "Show hover"
nvoid.lsp.buffer_mappings.normal_mode.gD["2"] = "Goto declaration"
nvoid.lsp.buffer_mappings.normal_mode.gI["2"] = "Goto Implementation"
nvoid.lsp.buffer_mappings.normal_mode.gd["2"] = "Goto Definition"
nvoid.lsp.buffer_mappings.normal_mode.gl["2"] = "Show line diagnostics"
nvoid.lsp.buffer_mappings.normal_mode.gp["2"] = "Peek definition"
nvoid.lsp.buffer_mappings.normal_mode.gr["2"] = "Goto references"
nvoid.lsp.buffer_mappings.normal_mode.gs["2"] = "show signature help"
nvoid.lsp.buffer_options.formatexpr = "v:lua.vim.lsp.formatexpr(#{timeout_ms:500})"
nvoid.lsp.buffer_options.omnifunc = "v:lua.vim.lsp.omnifunc"
nvoid.lsp.code_lens_refresh = true
nvoid.lsp.diagnostics.float.border = "single"
nvoid.lsp.diagnostics.float.focusable = false
nvoid.lsp.diagnostics.float.header = ""
nvoid.lsp.diagnostics.float.prefix = ""
nvoid.lsp.diagnostics.float.source = "always"
nvoid.lsp.diagnostics.float.style = "minimal"
nvoid.lsp.diagnostics.severity_sort = true
nvoid.lsp.diagnostics.signs.active = true
nvoid.lsp.diagnostics.signs.values["1"].name = "DiagnosticSignError"
nvoid.lsp.diagnostics.signs.values["1"].text = " "
nvoid.lsp.diagnostics.signs.values["2"].name = "DiagnosticSignWarn"
nvoid.lsp.diagnostics.signs.values["2"].text = " "
nvoid.lsp.diagnostics.signs.values["3"].name = "DiagnosticSignHint"
nvoid.lsp.diagnostics.signs.values["3"].text = " "
nvoid.lsp.diagnostics.signs.values["4"].name = "DiagnosticSignInfo"
nvoid.lsp.diagnostics.underline = true
nvoid.lsp.diagnostics.update_in_insert = false
nvoid.lsp.diagnostics.virtual_text = true
nvoid.lsp.document_highlight = true
nvoid.lsp.float.border = "single"
nvoid.lsp.float.focusable = true
nvoid.lsp.float.style = "minimal"
nvoid.lsp.format_on_save = false
nvoid.lsp.peek.context = 10
nvoid.lsp.peek.max_height = 15
nvoid.lsp.peek.max_width = 30
nvoid.lsp.templates_dir = "/Users/daniellemaier/.local/share/nvoid/site/after/ftplugin"
nvoid.statusline.config = "%!v:lua.require('nvoid.builtin.statusline').run()"
nvoid.statusline.enabled = true
nvoid.statusline.style = "nvoid"
nvoid.terminal.behavior.close_on_exit = true
nvoid.terminal.window.split_ratio = 0.3
nvoid.terminal.window.vsplit_ratio = 0.5
nvoid.transparent_window = true
